// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user user @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         user     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model user {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  posts         post[]
  accounts      account[]
  sessions      session[]
}

model post {
  id        String  @id @default(cuid())
  title     String
  content   String?
  published Boolean @default(false)
  author    user?   @relation(fields: [authorId], references: [id])
  authorId  String?
}

model verificationToken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model myUser {
  id           String  @id @default(cuid())
  name         String?
  email        String? @unique
  access_token String?
  active       Boolean @default(false)
}

// model Post {
//   id            Int      @id @default(autoincrement())
//   title         String
//   code          String   @db.Text
//   language      String
//   totalLikes    Int      @default(0)
//   totalComments Int      @default(0)
//   createAt      DateTime @default(now())
//   updatedAt     DateTime @updatedAt
// }

// model User {
//   id           Int      @id @default(autoincrement())
//   username     String
//   email        String
//   password     String
//   sessionToken String
//   createAt     DateTime @default(now())
//   updatedAt    DateTime @updatedAt
// }
